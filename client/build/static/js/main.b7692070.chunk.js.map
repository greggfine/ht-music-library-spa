{"version":3,"sources":["components/NavBar/NavBar.jsx","components/CategoriesProvider.jsx","components/Types/Types.jsx","hooks/useToggleState.jsx","components/Subcategory/Subcategory.jsx","components/Subcategories/Subcategories.jsx","components/waveContainerData.js","components/Volume/Volume.jsx","components/Wave/Wave.jsx","components/ControlsPanel/ControlsPanel.jsx","components/trackColumnData.js","components/Tracks/Tracks.jsx","components/TracksHOC.jsx","components/FilterList/FilterList.jsx","components/MainCategories/MainCategories.jsx","App.js","serviceWorker.js","index.js","components/NavBar/img/ht-logo.png"],"names":["NavBar","Navbar","bg","expand","className","Brand","href","src","htlogo","alt","Toggle","aria-controls","Collapse","id","Nav","Link","CategoriesCtx","createContext","CategoriesProvider","props","useState","categories","setCategories","currentSubcategoryArr","setCurrentSubcategoryArr","currentSubgenreArr","setCurrentSubgenreArr","useEffect","a","async","fetch","json","categoriesJSON","fetchCategories","Provider","value","children","Types","currentMainCategory","currentSubCat","categoriesCtx","useContext","typesList","find","category","mainCategoryName","subcategories","subcategory","subcategoryName","subcategoryTypes","map","subgenreType","idx","Form","key","Check","type","label","onClick","currSubgenre","includes","filteredArr","filter","genre","handleSetCurrentSubgenres","useToggleState","initialState","state","setState","handleToggleState","Subcategory","handleSetCurrentSubcategory","showMoreBtn","toggleShowMoreBtn","show","setShow","handleClose","console","log","handleSubcategoryClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Subcategories","subcategoryList","container","progressColor","waveColor","cursorColor","height","pixelRatio","responsive","Volume","handleSetVolume","min","max","step","onInput","waveformContainerPromise","ControlsPanel","paused","handlePlayPause","handleStop","currentTrack","subcategoryTracks","download","Badge","length","Wave","togglePause","isLoading","toggleIsLoading","WaveSurfer","create","waveContainerData","waveform","load","on","loadTrackIntoWaveform","Spinner","animation","role","replace","play","pause","stop","e","persist","setVolume","target","dataField","text","sort","style","color","fontWeight","headerStyle","backgroundColor","Tracks","setCurrentTrack","rowEvents","row","rowIndex","filename","firstTenSubcategoryTracks","track","hover","keyField","data","columns","selectRow","mode","clickToSelect","TracksHOC","tracks","setTracks","categoriesAndSubgenres","URL","reduce","accum","removeLastAmpersandURL","slice","tracksJSON","fetchTracks","FilterList","currentSubcategory","MainCategories","mainCategory","setMainCategory","mainCategoryList","handleSetMainCategory","icon","currSubCat","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b7692070.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./NavBar.styles.scss\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport htlogo from \"./img/ht-logo.png\";\n// import { SearchFieldCtx } from \"../SearchFieldProvider\";\n\nexport default function NavBar() {\n  //   const searchFieldCtx = useContext(SearchFieldCtx);\n  //   const [searchFieldInput, setSearchFieldInput] = useState(\"\");\n  //   const handleSearchFieldInput = e => {\n  //     setSearchFieldInput(e.target.value);\n  //   };\n  //   const handleSearchSubmit = async e => {\n  //     e.preventDefault();\n  //     const tracks = await fetch(`/tracks/search/${searchFieldInput}`);\n  //     const tracksJSON = await tracks.json();\n  //     setSearchFieldInput(\"\");\n  //   };\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" className=\"NavBar\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={htlogo}\n          className=\"d-inline-block align-top NavBar-logo\"\n          alt=\"React Bootstrap logo\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">HT Music Library</Nav.Link>\n          <Nav.Link href=\"#link\">Latest Tracks</Nav.Link>\n          {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">\n              Another action\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">\n              Separated link\n            </NavDropdown.Item>\n          </NavDropdown> */}\n        </Nav>\n        {/* <Form\n          inline\n          className=\"NavBar-form\"\n          onSubmit={searchFieldCtx.handleSearchSubmit}\n        >\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by track name\"\n            className=\"mr-sm-2\"\n            value={searchFieldCtx.searchFieldInput}\n            onChange={searchFieldCtx.handleSearchFieldInput}\n          />\n          <Button variant=\"outline-success\" type=\"submit\">\n            Search\n          </Button>\n        </Form> */}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { useState, useEffect, createContext } from \"react\";\n\nexport const CategoriesCtx = createContext();\n\nexport const CategoriesProvider = props => {\n  const [categories, setCategories] = useState([]);\n  //   const [currentSubcategory, setCurrentSubcategory] = useState(\"jazz\")\n  const [currentSubcategoryArr, setCurrentSubcategoryArr] = useState([]);\n  const [currentSubgenreArr, setCurrentSubgenreArr] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const categories = await fetch(\"/categories\");\n      const categoriesJSON = await categories.json();\n      setCategories(categoriesJSON);\n    };\n    fetchCategories();\n  }, []);\n\n  return (\n    <CategoriesCtx.Provider\n      //   value={{ categories, currentSubcategory, setCurrentSubcategory }}\n      value={{\n        categories,\n        currentSubcategoryArr,\n        setCurrentSubcategoryArr,\n        currentSubgenreArr,\n        setCurrentSubgenreArr\n      }}\n    >\n      {props.children}\n    </CategoriesCtx.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { CategoriesCtx } from \"../CategoriesProvider\";\nimport Form from \"react-bootstrap/Form\";\n\nconst Types = ({ currentMainCategory, currentSubCat }) => {\n  const categoriesCtx = useContext(CategoriesCtx);\n  const [selectedSubcategories, setSelectedSubcategories] = useState([]);\n\n  const handleSetCurrentSubgenres = currSubgenre => {\n    if (categoriesCtx.currentSubgenreArr.includes(currSubgenre)) {\n      const filteredArr = categoriesCtx.currentSubgenreArr.filter(genre => {\n        return genre !== currSubgenre;\n      });\n\n      categoriesCtx.setCurrentSubgenreArr(filteredArr);\n    } else {\n      categoriesCtx.setCurrentSubgenreArr([\n        ...categoriesCtx.currentSubgenreArr,\n        currSubgenre\n      ]);\n    }\n  };\n\n  const currentMainCategoryObj = categoriesCtx.categories.find(category => {\n    return category.mainCategoryName === currentMainCategory;\n  });\n  const currentSubcategoryObj = currentMainCategoryObj.subcategories.find(\n    subcategory => subcategory.subcategoryName === currentSubCat\n  );\n\n  //   const handleFormClick = subCategoryType => {\n  //     console.log(categoriesCtx);\n  //     setSelectedSubcategories([...selectedSubcategories, subCategoryType]);\n  //   };\n\n  const typesList = currentSubcategoryObj.subcategoryTypes.map(\n    (subgenreType, idx) => {\n      // return <li key={idx}>{type}</li>;\n      return (\n        <Form key={idx}>\n          {/* {[\"checkbox\"].map(type => ( */}\n          {/* <div key={`default-${type}`} className=\"mb-3\"> */}\n          <div key={`default-checkbox`} className=\"mb-3\">\n            <Form.Check\n              //   type={type}\n              type=\"checkbox\"\n              // id={`default-${type}`}\n              id={`default-checkbox`}\n              label={subgenreType}\n              onClick={() => handleSetCurrentSubgenres(subgenreType)}\n              //   onClick={() => handleFormClick(subgenreType)}\n            />\n          </div>\n          {/* ))} */}\n        </Form>\n      );\n    }\n  );\n\n  return <div>{typesList}</div>;\n};\n\nexport default Types;\n","import {useState} from 'react';\n\nconst useToggleState = (initialState=false) => {\n    const [state, setState] = useState(initialState)\n    const handleToggleState = () => {\n        setState(!state)\n    }\n    return [state, handleToggleState]\n}\n\nexport default useToggleState;","import React from \"react\";\nimport \"./Subcategory.styles.scss\";\nimport Types from \"../Types/Types\";\nimport useToggleState from \"../../hooks/useToggleState\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Subcategory = ({\n  subcategoryName,\n  currentMainCategory,\n  handleSetCurrentSubcategory\n}) => {\n  const [showMoreBtn, toggleShowMoreBtn] = useToggleState();\n  const [show, setShow] = useToggleState();\n  const handleClose = () => {\n    setShow(false);\n    toggleShowMoreBtn();\n    console.log(\"closed\");\n  };\n  const handleShow = () => setShow(true);\n\n  const handleSubcategoryClick = subcategoryName => {\n    toggleShowMoreBtn();\n    handleSetCurrentSubcategory(subcategoryName);\n  };\n\n  return (\n    <>\n      <div className=\"Subcategory\">\n        <li\n          className=\"Subcategory-item\"\n          onClick={() => handleSubcategoryClick(subcategoryName)}\n        >\n          {subcategoryName}\n        </li>\n        {showMoreBtn && (\n          <>\n            <button\n              onClick={handleShow}\n              className=\"btn btn-success show-more-btn\"\n            >\n              Show more...\n            </button>\n            {show && (\n              <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Select subcategories...</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Types\n                    currentMainCategory={currentMainCategory}\n                    currentSubCat={subcategoryName}\n                  />\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"primary\" onClick={handleClose}>\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Subcategory;\n","import React, { useContext } from \"react\";\nimport Subcategory from \"../Subcategory/Subcategory\";\nimport \"./Subcategories.styles.scss\";\nimport { CategoriesCtx } from \"../CategoriesProvider\";\n\nconst Subcategories = ({\n  currentMainCategory,\n  handleSetCurrentSubcategory\n}) => {\n  const categoriesCtx = useContext(CategoriesCtx);\n  const subcategoryList = categoriesCtx.categories.map(category => {\n    if (category.mainCategoryName === currentMainCategory) {\n      return category.subcategories.map((subcategory, idx) => (\n        <Subcategory\n          key={idx}\n          subcategoryName={subcategory.subcategoryName}\n          currentMainCategory={currentMainCategory}\n          handleSetCurrentSubcategory={handleSetCurrentSubcategory}\n        />\n      ));\n    }\n  });\n  return <ul className=\"Subcategories\">{subcategoryList}</ul>;\n};\n\nexport default Subcategories;\n","export default {\n  container: \"#waveform\",\n  progressColor: \"rgb(68,89,66)\",\n  waveColor: \"grey\",\n  cursorColor: \"#999999\",\n  height: 54,\n  pixelRatio: 1,\n  responsive: true\n};\n","import React from \"react\";\nimport \"./Volume.styles.scss\";\n\nexport default function Volume({ handleSetVolume }) {\n  return (\n    <div className=\"Volume\">\n      <input\n        type=\"range\"\n        className=\"volume-slider\"\n        min=\"0\"\n        max=\"1\"\n        step=\".01\"\n        onInput={handleSetVolume}\n      />\n      <i className=\"fa fa-volume-up speaker-icon\"></i>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Wave.styles.scss\";\nimport waveContainerData from \"../waveContainerData\";\nimport ControlsPanel from \"../ControlsPanel/ControlsPanel\";\n\nlet waveformContainerPromise;\n\nconst Wave = ({ currentTrack, subcategoryTracks }) => {\n  const [paused, togglePause] = useState(true);\n  const [isLoading, toggleIsLoading] = useState(false);\n\n  useEffect(() => {\n    const createWaveformContainer = async () =>\n      await WaveSurfer.create(waveContainerData);\n    waveformContainerPromise = createWaveformContainer();\n  }, []);\n\n  useEffect(() => {\n    const loadTrackIntoWaveform = async () => {\n      toggleIsLoading(true);\n      const waveform = await waveformContainerPromise;\n      await waveform.load(`/audio/${currentTrack}`);\n      waveform.on(\"ready\", () => {\n        toggleIsLoading(false);\n      });\n    };\n    loadTrackIntoWaveform();\n  }, [currentTrack]);\n\n  const handlePlayPause = async () => {\n    const waveform = await waveformContainerPromise;\n    await togglePause(!paused);\n    paused ? waveform.play() : waveform.pause();\n  };\n\n  const handleStop = async () => {\n    const waveform = await waveformContainerPromise;\n    await waveform.stop();\n    paused ? togglePause(paused) : togglePause(!paused);\n  };\n\n  const handleSetVolume = async e => {\n    e.persist();\n    let waveform = await waveformContainerPromise;\n    waveform.setVolume(e.target.value);\n  };\n\n  return (\n    <div className=\"Wave\">\n      {isLoading && (\n        <Spinner\n          animation=\"grow\"\n          role=\"status\"\n          className=\"loading-spinner\"\n          variant=\"success\"\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )}\n      <div id=\"waveform\" className=\"waveform\"></div>\n      <div className=\"badge-controlpanel-wrapper\">\n        <h3>\n          <Badge className=\"current-track-title\" variant=\"dark\">\n            {currentTrack.replace(/_HiddenTigerMusic.mp3/, \"\")}\n          </Badge>\n        </h3>\n        <ControlsPanel\n          paused={paused}\n          handlePlayPause={handlePlayPause}\n          handleStop={handleStop}\n          currentTrack={currentTrack}\n          subcategoryTracks={subcategoryTracks}\n          handleSetVolume={handleSetVolume}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Wave;\n","import React from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Volume from \"../Volume/Volume\";\nimport \"./ControlsPanel.styles.scss\";\n\nexport default function ControlsPanel({\n  paused,\n  handlePlayPause,\n  handleStop,\n  currentTrack,\n  subcategoryTracks,\n  handleSetVolume\n}) {\n  return (\n    <div className=\"controls-badge-wrapper\">\n      {/* NEED TO DISABLE CONTROL PANEL WHILE\n        AUDIO FILE IS LOADING!!!!!!! */}\n      <div className=\"controls\">\n        <i\n          className={\n            paused ? \"fa fa-play fa-4x btn-play\" : \"fa fa-pause fa-4x btn-pause\"\n          }\n          onClick={handlePlayPause}\n        ></i>\n\n        <i className=\"fa fa-stop fa-4x btn-stop\" onClick={handleStop}></i>\n\n        <a\n          href={`/audio/${currentTrack}`}\n          id=\"downloader\"\n          download={currentTrack}\n        >\n          <i className=\"fa fa-download fa-4x download-icon\"></i>\n        </a>\n      </div>\n      <Volume handleSetVolume={handleSetVolume} />\n      <h4>\n        <Badge className=\"results-badge\" variant=\"info\">\n          {subcategoryTracks.length} Results\n        </Badge>\n      </h4>\n    </div>\n  );\n}\n","export default [\n  {\n    dataField: \"filename\",\n    text: \"Track Name\",\n    sort: true,\n    style: { color: \"rgb(179, 34, 48)\", fontWeight: \"700\" },\n    headerStyle: { backgroundColor: \"lightgrey\" }\n  },\n  {\n    dataField: \"metadata.description\",\n    text: \"Description\",\n    headerStyle: { backgroundColor: \"lightgrey\" }\n  },\n  {\n    dataField: \"metadata.bpm\",\n    text: \"BPM\",\n    sort: true,\n    headerStyle: { backgroundColor: \"lightgrey\" }\n  },\n  {\n    dataField: \"metadata.length\",\n    text: \"Length\",\n    sort: true,\n    headerStyle: { backgroundColor: \"lightgrey\" }\n  }\n];\n","import React, { useState, useContext } from \"react\";\nimport \"./Tracks.styles.scss\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport Wave from \"../Wave/Wave\";\nimport columns from \"../trackColumnData\";\n// import { SearchFieldCtx } from \"../SearchFieldProvider\";\n\nexport default function Tracks({ subcategoryTracks }) {\n  //   let searchFieldCtxFormatted;\n  //   const searchFieldCtx = useContext(SearchFieldCtx);\n  //   if (searchFieldCtx.searchFieldTrackResult) {\n  //     searchFieldCtxFormatted = searchFieldCtx.searchFieldTrackResult[0].filename.replace(\n  //       /_HiddenTigerMusic.mp3/,\n  //       \"\"\n  //     );\n  //   }\n  //   console.log(searchFieldCtxFormatted); // undefined and string\n\n  const [currentTrack, setCurrentTrack] = useState(\n    \"Fireside_HiddenTigerMusic.mp3\"\n  );\n\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      console.log(\"clicked!!!\");\n      setCurrentTrack(`${row.filename}_HiddenTigerMusic.mp3`);\n    }\n  };\n\n  const firstTenSubcategoryTracks = subcategoryTracks\n    // .filter((track, idx) => idx < 10)\n    .map(track => {\n      return {\n        ...track,\n        filename: track.filename.replace(/_HiddenTigerMusic.mp3/, \"\")\n      };\n    });\n\n  const selectRow = { mode: \"radio\", clickToSelect: true };\n\n  return (\n    <>\n      <Wave currentTrack={currentTrack} subcategoryTracks={subcategoryTracks} />\n\n      <div className=\"table-container\">\n        <BootstrapTable\n          hover\n          keyField=\"_id\"\n          data={firstTenSubcategoryTracks}\n          //   data={[searchFieldCtxFormatted]}\n          //   data={\n          //     // [{ filename: searchFieldCtxFormatted }] || firstTenSubcategoryTracks\n          //     [{ filename: searchFieldCtxFormatted }] || firstTenSubcategoryTracks\n          //   }\n          columns={columns}\n          rowEvents={rowEvents}\n          selectRow={selectRow}\n          className=\"table\"\n        />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Tracks from \"./Tracks/Tracks\";\nimport { CategoriesCtx } from \"../components/CategoriesProvider\";\n// import { SearchFieldCtx } from \"../components/SearchFieldProvider\";\n\nconst TracksHOC = () => {\n  const [tracks, setTracks] = useState([]);\n  const categoriesCtx = useContext(CategoriesCtx);\n  //   const searchFieldCtx = useContext(SearchFieldCtx);\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      let tracks;\n      //   console.log(categoriesCtx.currentSubgenreArr); // [\"downtempo\"]\n      //   console.log(categoriesCtx.currentSubcategoryArr); // [\"electronic\"]\n      //   concat these to get [\"downtempo, electronic\"]\n      const categoriesAndSubgenres = [\n        ...categoriesCtx.currentSubgenreArr,\n        ...categoriesCtx.currentSubcategoryArr\n      ];\n      console.log(categoriesAndSubgenres);\n      //   const URL = categoriesCtx.currentSubcategoryArr.reduce((accum, genre) => {\n      //     return `${accum}${genre}&`;\n      //   }, \"\");\n\n      const URL = categoriesAndSubgenres.reduce((accum, genre) => {\n        return `${accum}${genre}&`;\n      }, \"\");\n      const removeLastAmpersandURL = URL.slice(0, URL.length - 1);\n      !removeLastAmpersandURL\n        ? (tracks = await fetch(`/tracks/jazz`))\n        : (tracks = await fetch(`/tracks/${removeLastAmpersandURL}`));\n      const tracksJSON = await tracks.json();\n      setTracks(tracksJSON);\n      //   searchFieldCtx.setSearchFieldTrackResult(\"\");\n    };\n    fetchTracks();\n  }, [categoriesCtx.currentSubcategoryArr, categoriesCtx.currentSubgenreArr]);\n\n  return tracks ? <Tracks subcategoryTracks={tracks} /> : \"Loading...\";\n};\n\nexport default TracksHOC;\n","import React, { useContext } from \"react\";\nimport { CategoriesCtx } from \"../CategoriesProvider\";\n\nconst FilterList = () => {\n  const categoriesCtx = useContext(CategoriesCtx);\n  return (\n    <div>\n      <h4>\n        Filtered By: <strong>{categoriesCtx.currentSubcategory}</strong>\n      </h4>\n    </div>\n  );\n};\n\nexport default FilterList;\n","import React, { useState, useContext } from \"react\";\nimport Subcategories from \"../Subcategories/Subcategories\";\nimport \"./MainCategories.styles.scss\";\nimport TracksHOC from \"../TracksHOC\";\nimport FilterList from \"../FilterList/FilterList\";\nimport { CategoriesCtx } from \"../CategoriesProvider\";\n\nconst MainCategories = () => {\n  const [mainCategory, setMainCategory] = useState(\"genre\");\n  const categoriesCtx = useContext(CategoriesCtx);\n\n  const handleSetCurrentSubcategory = currSubCat => {\n    if (categoriesCtx.currentSubcategoryArr.includes(currSubCat)) {\n      const filteredArr = categoriesCtx.currentSubcategoryArr.filter(genre => {\n        return genre !== currSubCat;\n      });\n      categoriesCtx.setCurrentSubcategoryArr(filteredArr);\n    } else {\n      categoriesCtx.setCurrentSubcategoryArr([\n        ...categoriesCtx.currentSubcategoryArr,\n        currSubCat\n      ]);\n    }\n  };\n\n  const handleSetMainCategory = category => {\n    setMainCategory(category.mainCategoryName);\n  };\n\n  const mainCategoryList = categoriesCtx.categories.map((category, idx) => (\n    <li\n      key={idx}\n      onClick={() => handleSetMainCategory(category)}\n      style={{\n        backgroundColor:\n          category.mainCategoryName === mainCategory ? \"rgb(218, 210, 186)\" : \"\"\n      }}\n    >\n      <p>{category.mainCategoryName}</p>\n      <p className={`${category.icon} icon`}></p>\n    </li>\n  ));\n  return (\n    <>\n      <ul className=\"MainCategories\">{mainCategoryList}</ul>\n      <Subcategories\n        currentMainCategory={mainCategory}\n        handleSetCurrentSubcategory={handleSetCurrentSubcategory}\n      />\n      <FilterList />\n      <TracksHOC />\n    </>\n  );\n};\n\nexport default MainCategories;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport MainCategories from \"./components/MainCategories/MainCategories\";\nimport { CategoriesProvider } from \"./components/CategoriesProvider\";\n// import { SearchFieldProvider } from \"./components/SearchFieldProvider\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => (\n  <>\n    {/* <SearchFieldProvider> */}\n    <NavBar />\n    <Container className=\"Container fluid\">\n      <CategoriesProvider>\n        <MainCategories />\n      </CategoriesProvider>\n    </Container>\n    {/* </SearchFieldProvider> */}\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ht-logo.4bd59fce.png\";"],"sourceRoot":""}